# کار با رجکس ها در پایتون
import re
# کار اصلی رجکس پیدا کردن نوع خاصی است یا حرف خاصی است و یا اعتبار سنجی ورودی ها و....
# و با پایتون جدا ردن اون تیکه هاو عوض کردن اونها یا کاری
# را روی اون تیکه ها انجام دادن یا ریختن در دیتا بیس ها و....
#
#

#  کلا رجکس در باره جامع و مانع بودن است
# باید فرمولی بنویسی که چیزهایی که میخوایم را بیاره تو
# چیزهایی که نمیخوایم را بندازه بیرون
#
# به بیان دیگر
# چنین نباشه که چیزهایی که میخوام تو نباشن تو باشن
# و چیزهایی که میخوایم بیرون نباشند بیرون باشند


# ////////

# نوشتن در یک سایت انلاین که رجکس را میده

https://regex101.com/
# اینها را در اون امتحان کن نسخت
#/////  نخست نوشتن کلی///////

# یافتن یه حرف خاص در رشته
m
# میاد همه m ها را جدا میکنه و میده
ali mamad hasan ame

# در جقیقت توی سایت میاد ام ها را میده

# ///////
.

# همه چیز
# همه چیز در دنیا
# ولی تک میده. یعنی یه دونه میده
ali mamad hasan ame abadan fgt sbk 5.3  45_()* - +'' _  $ % ^ &
# یعنی در بالا همه را انتخاب میکنه چه حروف و چه پرانتز و چه حتی اسپیس و چه عددو....
# ولی جلوتر در بک اسلش دبلیو علامت دلار و... را انتخاب نمیکنه ولی نقطه همه اونها را انتخاب میکنه

# برای اینکه چندتا بده باید
.*
# یا
.+
کنی
# ///////
# حالا
. اسپیس
# میاد همه حروف را که بعدش اسپیس هست را بهم بده

# حالا
اسپیس .

# میاد همه حروف را که قبلش اسپیس هست را بهم بده

# /////
[ab]
# دستکم چه ای را پیدا کردی چه بی را پیدا کردی را بده
# حتی اگر چسبیده نباشن و بی جدا باشه اونو پیدا میکنه میده

[ab]d
# اینارو میاره
# ad
# bd





# //////
\d
# digit یعنی عدد را میده
# یعنی میاد اگر فلوت هم باشه کار نداره و نقطه را انتخاب نمیکنه

# /////
\w
# word
# همه حروف و عدد را میده  و اندراسکور را هم میده
# ولی علامت ها را نمیده
# مثلا این رشته
ali mamad hasan ame abadan fgt sbk 5.3  45_()* - +'' _  $ % ^ &
# میاد همه را میده و اعداد را میده ولی پرانتز
# و به علاوه و منها را نمیده ولی اندراسکور را میده


# //////////
\s
# white space
# سرخط . تب . اسپیس معنی میده
# یعنی همه جاهای خالی را میده چه با اسپیس زده باشیم و چه با اینتر و....



# //////


# ترکیبی
\s...\s
#
# این میاد همه حروف سه حرفی را که پیش از
# اون اسپیس است و پس از اون اسپیس است را میاره
# مثلا
# ali mamad hasan ame abadan fgt sbk 5.3  45_()* - +'' _ $ % ^ &
# میاد
# fgt را میده
# یا حتی اینتر هم بود میفهمید به عنوان یه اسپیس
#
# ////////
*
# هرجند تا یعنی صفر تا هم بود بگیر

+
# از یک تا تا بینهایت را بگیر.

*a
# یعنی هرچندتا ای را بگیر

# ////////
# انتخاب همه پیش و پس از حرف
@.*
# پس از یه حرف را میاره انتخاب میکنه

mamadnamjoo@gmail.com
# میاد
@gmail.com
# را میده

# پیش از یه حرف را انتخاب میکنه
.*@
# mamadnamjoo@
# را میده
# خود اتساین را هم میده
# ////////
\.
# نکته . اگر هر حرفی معنی خاصی داشت
# و ما میخواستیم از اون حرف استفاده کنیم نه معنی خاص یهه بک اسلش میزاریم

# یعنی خود نقطه
.

# مثلا

mamadnamjoo.
# که نقطه اخر را انتخاب کنیم


# مثلا این تا نقطه را میده

@.*\.
# gmail.
# //////////
# group / full match
()
# گروه بندی کردن
# یعنی من با این تیکش کار دارم
# هرچند اونا هم انتخاب شده یعنی فول مچ ولی گروه بندی این هستش
@(.*)\.

# میاد اینو میده
gmail
# //////
{}
# تعداد . یعنی این تعداد میخوام .
m{2}
# یعنی جایی که دو تا m با هم اومده
mammad
mm
# را میگه پیدا کردم
# 1 match


{n,m}
# یعنی این بازه را مچ میکنه

{A,Z}

# /////////
# همه چیز به غیر از
# به جز
[^m]
# بعنی همه را میده به جز m ها را انتخاب میکنه


# /////
^
# شروع خط


$
# پایان خط



# خط هایی که با m شورع شده

^m
# میاد همه خط ها را میگیرده و فط اونایی را میاره که با یک اغاز شده

# حالا کل خط را بده تا اخرش
^m.*


# شروع خط با عدد
^\d
# سپس کل خط را بده
^\d.*


# اونایی را انتخاب کن که عدد نباشه
# همه غیر عدد ها را میده در کل متن و کاری با خط نداره
[^\d.*]


# این ستاره را و نقطه ار هم انتخاب نمیکنه
[^\d.*]
# ولی این میکنه
[^\d]


# //////
# فقط شماره ها
^\d+$
# یعنی اگر چیزی اولش عدد نباشه
# یا وسطش حررف باشه را انتخاب نکنه
# یعنی تا اخر همش عدد باشه


# ///////
# همه را که نوشته نامبر و مثل دیکشنری باشه را بده
^number : .*

# ///////
# اینم یعنی فقط اون تیکشو میخوام از کل انتخاب
^number : (.*)

# ////////
# به اندازه ۱۱ رقم

(\d{11})
# حالا ولی میاد بیشترشو هم میده یعنی ۱۳ رقم عدد را میده

# با این فقط ۱۱ تا رقم
(\d{11})$

# ////
# Greedy , lazy
# حریص  رجکس
# رجکس گیریدی است یعنی همه را میاره میگیره
<>
   <>
      <>
      # برای انتاخاب میگیم
\ < .*>
# حالا از اول تا اخر را میاره انتخاب میکنه

# برای این باید با علامت سوال تنبل کنیمش
\ < .*?>
# یعنی اولی را گرفتی تموم کن


# یا

this .*?
# فقط یا ها را میاره


# برش میزنه . تیکه برداری میکنه
this .*?end
this is the end of line. this is ths second end of.
# این of line  را در اول و of در اخر نمیاره
# چند پاره میکنه



# /////
\t
# تب را میابه

# //////////
\n
# اینتر سرخط را میابه

# مثلااز اونجا که اینتر خورده را تا اخر پیدا میکنه
\n.*

# ///////
\b
# میبنده از

\bA\b
# اول و اخرشو میبنده

# /////////
\r
# اومدن پایین


# //////
# انتخاب یه کلمه
^(\w+)
# از اول اغاز میکنه و سپس حروف الفبا اگر یه دونه بود تا اخر برو

# از این
ali.jadi.mirmirani
mamad.namjoo

# این انتخاب یه کلمه سه حرفی را فقط میاره
^(\w+)\.(\w+)\.(\w+)
ali.jadi.mirmirani



# انتخاب یه کلمه را اگر دو حرفی بود بیاره اگر نبود سه حرفی
^(\w+)\.*(\w*)\.(\w+)

ali.jadi.mirmirani
mamad.namjoo

# توجه شود که اگر مثبت میزاشتیم و اینطور بود
^(\w+)\s*(\w+)\s(\w+)
ali jadi mirmirani
mama d namjoo
# یعنی اون خودش حرف اخر را میگیره به عنوان دومی
# با رنگ در سایت رجکس ۱۱۰ خوب نشون داده

# این اگه اسپییس باشه انتخاب میکنه
^(\w+)\s*(\w*)\s(\w+)
ali jadi mirmirani
mamad namjoo

# ////////////
# برش زدن از
(?=cow).*
My |cow always gives milk


# //////
# برش زدن تا
.*(?=milk)
My cow always gives |milk


# //////
# برش زدن فاصله بین
# بازه
cow(.*)milk
My cow| always gives |milk

# یا این

cow ([\s\S]*?) milk
My cow| always gives |milk

# ///////

All work and no play makes jack and dull boy

Jack
Back
lack













# انتخاب پشت و جلو ی یه کاراکتر

(?<=S)
# یعنی تا پس از S را بیار
# مثلا در این
mamSad.n%amjoo11@gmail.com
# میشه
mamS|



# حالا. تا پشتش
(?=\.)
# هرجا نقطه دید پشتش وایمیسته

mamSad.n%amjoo11@gmail.com
# میشه
mamSad|.n%amjoo11@gmail|.com


تبعا اینم یعنی
(?=S)
mam|S

# پس علامت < یعنی یه دونه میندازه جلوش
(?<=S)
mamS|


# /////////
[^.]
# کاراکتر غیر نقطه  هرچی
# این تک تک میگیره

# ولی این همه را با هم میچسبونه . از یکی بیشتر
[^.]+

# //////////
# انتخاب  همه چیز به غیر از عدد ها
(?!^\d+$)^.+$

# یعنی هرچیز را انتخاب میکنه فقط رشته های اعداد محض را انتخاب نمیکنه
# اینم همونکار را میکنه
\b.*[a-zA-Z]+.*\b

میگه
.*[a-zA-Z]
# همه حروف را بده

# ///////
# غیر عدد ها را انتخاب میکنه
.*?[^0-9]?

# اگر در یک رشته غیر عدد بود اونو انتخاب میکنه ولی اعدادشو انتخاب نمیکنه


# ////////
# یکبار رخ بده  فقط
# و حتما رخ بده
^(?=.*?1)(?=.*?2)(?=.*?3)(?=.*?4)(?=.*?5)(?!.*?([1-5]).*?\1).*

# معیار این باشه
# از ۱ تا ۵ باشه

14532 should be ACCEPTED
252413 should be REJECTED (2 is repeated more than one time)
3152 should be REJECTED (4 doesn't occur)

# توضیح


# یااین
^(?:([1-5])(?!.*\1)){5}$
                     ^
# ////////////////












# ////////

# جالبه که من معلوم نکردم عدد را و ولی خودش با این میاره
^.*[A-Za-z]@

gfd34fdg@gmail.com
grvfdv@maktab.ire
34fdfdgd@mail.com

# اگر خود
[A-Za-z]

# بزنی فقط حروف را میاره و همه حروف را
34DFfdfdgd@mail.com
# را نمیاره



# ///////

#

# /////////


# /////
# ایمیل های معتبر
# جیمیل معتبر
^[A-Za-z0-9._%+-]+@gmail\.com$
# mamad.namjoo11@gmail.com

# توضیح
[]
# یعنی دستکم همه چیزها را که در این است بیار
# یعنی چه این بود چه این بود چه اون را بیار
# مابقی و پیش از اون هم بیار

^
# از اول اغاز میکنه

# اینم
[a-z]
# اینم میگه از a تا z همه را میده
# یعنی هر چیز که پیدا کردی این بود را بده

# حالا چون حساسه به کوچک و بزرگ اینم میگه میده
[A-Z]
mamSad.namjoo11@gmail.com
# که اینجا فقط S را میده بقیه کوچک هستند

# اینم که ظاهرا مجازه در رجکس ایمیل برای اسم و...
._%+-

# اینکه پشت این به علاوه گذاشته بدون اون ریجکس نمیکنه +
^[A-Za-z0-9._%+-]+@gmail\.com$
# احتمالا پس از اسکوربراکت میخواد
# و ضمن اینکبرای سرچ ها بزاری بهتره در گوگل یا یوتیوب هم خودکار مثبت را میاره
# و داخل براکت واسه این نگذاشت که علامت تلقی میشد و واسه همین چسبوند a-z را به A-Z

# اینم برای این آورده که نشون بده منظورم . بطور کلی که در سینتکس ریجکس هست نیستش
$
# هم اینه که پس از اون دیگه چیزی نیاد و اونا را انتخاب نکنه



# یا نمونه دیگر
'^[A-Za-z0-9._%+-]+@' + email_domain + '$'
# که اینم متغیر اورده
# بجای ایمیل دومین که باید جی میل یا اوتلوک یا یاهو باشه که جاگزاری میکنه
# جاگزار شونده است

# مشکل عدد را برطرف کرد
# از اونجایی که فقط ایمیل ها را بده که عدد هم نباشه در اکسپرشن این درسته
# میاد بعضی اینها را پوشش میده که سه تا توی رشته هستش





# //////////
# پرسش ها در باره رجکس
# /////

# ۱-
# چجوری وقتی تیکه از اون رشته ام را منطبق میکنه ولی مابقیش منطبق نمیشه هم کل رشته را قبول میکنه و من نمیخوام کل رشته را بپذیره
# میخوام رشته هایی را بپذیره که کلش پذیرش بشه
# مثلا اینو انتخاب میکنه با اینکه تیکه اخرشو نمیگیره
dfsf@sdf.sdf.sdfjjkjkkj

# اخرشو اینو بزنم
dfsf@sdf.sdf.[/n]



# مثال ۲
abcackdef
# یعنی تا
abcack
# را میده

# راه حل ۱
[A-Za-z]+ack[\n]
# بگو بعدش فورا خط داره .
# پاسخ:




# /////////
# ۲-
# چجوری بهش حالی کنم که فقط یه کاراکتر را استٍناء کن از یه رشته بطوریکه اونیکی که مثلا جای دیگر گذاشتیم استثنا نشه
dfsf@sdf@sdf.sdfjjkjkkj


# پاسخ:

# //////////////
# ۳-
# چجوری حالی کنم که میشه در یک رشته علامتی یا حرفی وجود داشته باشه ولی نشه که در اول رشته باشه
=asds@fdfdf.d

# که مثلا
as=ds@fdfdf.d
# این مجاز باشه


# 4-چطوری حالیش کنم که توی قسمت اول اعداد با حروف را راه بده اما اعداد خالی را راه نده
\b([A-Za-z=%])+[A-Za-z\._+=%0-9]+@[a-zA-Z]+\.[a-zA-Z]+$
# این میاره
# مانع این میشه
3434324@gmail.com

# ولی
# اینم نمیاره و فقط مابقی تیکه هاشو میاره
3432.|dfvfd@gmail.com
# یعنی عدد زدا میشه

# و همچنین میاد اینو هم میاره
fdsgf@dsfd@fgdsf.dfs
# که نباید بیاره



# اما این کد میاد
^[A-Za-z\._+=%0-9]+@[a-zA-Z]+\.[a-zA-Z]+$
# اینو سازگار میکنه
3432.|dfvfd@gmail.com


# ولی اینو هم سازگار میکنه که نباید کنه
3434324@gmail.com




# هرچند اینو میندازه بیرون
fdsgf@dsfd@fgdsf.dfs

# ///////
4-
# چطور حالیش کنم که دوتا اتساین یا هرچیزی را راه نده؟ فقط یکیشو راه بده
fdsgf@dsfd@fgdsf.dfs

# نکته جالب اینه که مورد ۴ برای تغیر اعداد بود ولی روی اینم اثر میزاره



# //////////////////////////////
[]
# هرچی داخلش بنویسی یه کاراکتر حساب میشه

# چه  هر کدوم بود
# چه بی بود چه اچ بود چه ال بود حرف اول
# بعدش ack  بود
# را بده

[BHl]ack

Back
Hack
Lack
ALL work and no play makes Jack a dull boy.


# ///////
# میتونیم رنج کاراکتر ها را هم بدیم
# نیازی نیست همه را دونه دونه وارد کنیم
# که هر چیزی که در اون رنج بود را بده
[A-Z]ack
ALL work and no play makes Jack a dull boy.

Back
Hack
Lack

# /////////
# حرف کوچیک هم میتونی بزرگ را بده بعدش بقیه
[a-zA-Z]ck

# HACK
# hack



# ///
# وقتی که بخوایم هر کاراکتری که به
# ack ختم بشه را بده
# با این نمیده STack
[A-Za-z]ack
Back
Hack
Lack
STack
# یعنی فقط tack را میده
# یعنی یه کلمه شو میده


# راه ۱
# برای هرکاراکتر یه دونه میاریم
[A-Za-z][A-Za-z]ck
# STack
# اما بقیه را مچ نمیکنه
Back
Hack
Lack
# اینم نصفشو میاره
# gfdsfdsfdack



# راه ۲
[A-Za-z]+ack
# از چپش هرچندتا بود را بده
Back
Hack
Lack
stack
gfdsfdsfdack



# مشکل -
# اینکه بعدشو منطبق نمیکنه
# جلوشو بگیریم
abcackdef
# یعنی تا
abcack
# را میده

# راه حل
[A-Za-z]+ack[\n]
# بگو بعدش فورا  خط داره .
# یعنی بگو اونایی که بسته میشن نه اونایی که باز هستند

# مشکل اینه که اگر اون موارد درست را tab بزنه
# بازم به عنوان ناسازگار میشناسه
# راه حل
[a-zA-Z]+ack\s
# این میگه از اون به بعدشو نیار اگر حروف بود ولی وایت اسپیس بود را بیار
# یعنی
Hack
# که
Hack\t\t\t\t\
# است را سازگار میکنه به درستی
# ولی
abcackdefd
# را نه
# هرچند
# abcac




# اما مشکل وایت اسپیس اینه
Back\n
Hack\n
Lack\n
stack\n
gfdsfdsfdack\n
abcackdefd\n
hack
# ولی پس از این اخری هیچی نداره
# خودشو یه کاراکتر میگیره
# و اونو در نظر نمیگیره


# گاه در سایت regex101 چیزی کار میکند با اخر گذاشتن \s ولی در پایتون کار نمیکند


# راه حل اینه که
# \b
# بزاریم
# یعنی بگیم که مرز داره
[a-zA-Z]+ack\b
# حالا هک هم میگیره
hack


# نگرفتن قبل
# حالا اگر این باشه
123Lack
# دوباره میاد
lack  را میگیره
# و به واسطه اون کلشو ممکنه تشخیص بده
# اینکه بیایم پشتش هم مرز بزاریم
\b[a-zA-Z]


# ///////
# جامع و مانع بودن در []
1[02]1
101

# بقیه هم میان
# یعنی
1[02]1
121

# /////////
# اگر بخوایم بگیم تعداد صفر ها ۱ یا بیشتر باشه
# تکرار یک بار یا بیشتر از یک بار
10+1
# چیزی که قبلش میاد یعنی صفر میتونه یکبار یا بیشتر از یکبار باشه
# 101
# 1001
# 1000001
# 1000000001

# حالا اگر بخوایم علاوه بر اعداد بالا
# 11 هم باشه
# بزرگتر از صفر بار و یا صفر با
10*1
# 11
# 101
# 1001


# حالا اگر بخوایم بگیم ۳ تا صفر داشته باشه
# حرف سمت چپی را مد نظر میزاره
# مثل + * که حرف سمت چپی را مدنظر میزاره و معیار میزاره
# یعنی همه سمت چپ براکت یا سمت چپ + یا......
10{3}1

# فقط اینو میده
10001

# حالا بگیم بین ۳ تا ۶ تا صفر باشند را بده
10{3,5}1
10001
100001
1000001

# ولی
101
1000000000000001
# را نمیده

# حالا بیشتر از سه تا
10{3,}1
10000000000001
10001
1000001
1000000001


# حالا  وقتی که یا صفر یا یک باشه بعدش ۱ باشه اینجوریه
# یا هیچی نباشه یا یک باشه
# پس از اون یه عدد ۱ باشه
10?1

101
10001
11
10
# در  این بین ۱۰۱ و ۱۱ را میاره
# چون ۱۰ را میاره پس از اون چیزهایی که  یک بار صفر باشه یا اینکه اصلا هیچی هم صفر نباشه قبوله
////////
# لیترال ها
+ *
# حالا اگر خودشو بخوایم اشاره کنیم
\+
\*


# /
^
# تعین ابتدای فایل و نه بخش درون



# //////////////
فرق \b  با ^ و $
# همه اینا مرز را نشون میدن
# در اینجا  ما اگه بخوایم = اول را نگیره نمیشه
\b[a-zA-Z-+_%.]+@
# این دوتا را میگیره
my=asds@fdfdf.d
=asds@fdfdf.d
# با وجود اینکه = در اون کاراکتر نبود
# به واسطه انطباق بخشی از اون کلشو میاره


^[a-zA-Z-+_%.]+@
my=asds@fdfdf.d
=asds@fdfdf.d

# توضیح گام به گام
hello
# میاد پیدا میکنه هرجا باشه
+hello

# ولی با
^hello
# دیگه اینو مچ نمیکنه
sfwef hello world
# میگه فقط باید اولش باشه

# ولی \b هم میاره
\bhello
sfwef hello world


این
\bhello
# جدا جدا میاره hello  ها را انتخاب میکنه
hello world hello


# و این
\bhello

# قبل hello  را هم انتخاب میکنه
# dsdssd hello world dfdff dfdf
# یعنی
# dsdssd hello
# را

# ولی اگر
\b.*hello
# dsdssd hello world dfdff dfdf hello
# باشه
# از اول تا اخر انتخاب میکنه


# که البته هیچ ربطی نداره
\b.*
# ههم کلو انتخاب میکنه
# dsdssd hello world dfdff dfdf hello


# این هم
.*
# ههم کلو انتخاب میکنه
# dsdssd hello world dfdff dfdf hello



# این تا اخرین اچ انتخابمیکنه . خودشم میاره
^.*h
dsdssd hello world dfdff dfdf hello
# میشه
dsdssd hello world dfdff dfdf h


نمونه دیگر
# ما میخوایم به کلی حذف نکنه
# اینرا
3432.dfvfd@gmail.com
# یعنی ما اعداد صرف را نمیخوایم ولی این با حروف است
# این حذف میکنه
^[A-Za-z\._+=%-]+@[a-zA-Z]+\.[a-zA-Z]+$

# ولی این حذف نمیکنه
\b[A-Za-z\._+=%-]+@[a-zA-Z]+\.[a-zA-Z]+$
# و به واسطه

dfvfd@gmail.com
# کل
3432.dfvfd@gmail.com
# را میاره

# ///////
# اما
$

# وقتی میزنیم
world
# میاره
hello world

# ولی
world$
# hello world dsds
# را انتخاب نمیکنه

# فقط
world$
# hello world ddf
# که یعنی کل رشته را انتخاب نمیکنه

# در صورتی که
world\b
# در
hello world ddf
# انتخاب میکنه
# فقط world را



# ///////////
flags
# فیلتر هستند .

insensetive
#  مثلا از اول معلوم میکنیم که همه ی حروف و بزرگ و کوچک یعنی وقتی نوشتیم دیگه نیاز نیست یه بار دیگه [a-z] را که نوشتیم بنویسیم [a-zA-Z]


multiline
# یعنی همه خط هایی که اون شرط را بدارد وگرنه  فقط یه خط را انتخاب میکند

# /////////
^1.+1
# یعنی با یک اغاز بشه پس از اون هرچی بود تا اینکه به یک ختم بشه


# ///////
# از یه متن واژه هایی که با حروف صدادار آغاز بشوند را نشون میده
\b[aeiou][a-z]*\b
توضیح:
[aeiou]
# میشه حروف صدارا
# حالا کنار اون حروف مابقی حروف را بیار
[aeiou][a-z]
# تا اینجا فقط دو حرفی ها را اورد
# پس
+
# میزنیم
# پس از اون میخوایم بگیم مرز داره تا اخر نیست
# ولی کلمات یک حرفی را پیدا نمیکنه
# پس میزاریم .*




# حالا اگر \b اول را نزاریم
# میاد هر جا که در متن در هر جای واژه چه اول چه دوم چه سوم
# حروف صدادار را دید میگیره تا اخر اون واژه میده
# ولی ما میخوایم فقط اونایی که اولش باشه
# پس اولش میزاریم
\b

\b
# ضمن اینکه خودش تیکه تیکه میکنه و نشون میده


# //////
# واژه هایی که با حروف غیر صدادار اغاز بشن
\b[^aeiou][a-z]+\b

# مشکل اینکه اسپیس ها را هم میاره
# راه حل اینه که اسپیس را هم جزو نباشه هامون تعریف کنیم
\b[^\seoaiu][a-z]*\b

# اگه اعداد را هم نمیخواستیم انتخاب کنه اعداد را هم میزاریم
\b[^\seoaiu0-9][a-z]*\b

# حالا اگر بخوایم که چیزهایی را بزاره جزو انتخابمون
\b[^\seoaiu0-9][a-z\-]*\b
# که میاد - را هم میاره




# ////
\s
# وایت اسپیس یعنی تب و اینتر و اسپیس

# ولی
\S
# یعنی NONWHITE SPACE


وی این
\s+
# یعنی همه را که چند تا پشت سرهم هم شده را میاره

\S+
# همه واژه را میده تا جایی که برسه به اسپیس



# ///////////
# اشاره به اغاز
# یه نوع خاصی که ما میزاریم فقط باشند
\b[eoaiu]\b
# این فقط یک کلمه ای ها را میاره
# ولی میگیم بعدشم بده

\b[eoaiu]*\b
# اینم فقط مرزهای اون کلمات صدادار را میاره

# مساله اینه که ما میخوایم چیزی را بیاره و بده بهمون
# این انتخاب را ایجاب میکنه
\b[eoaiu][a-z]*\b



پس اینم انتخاب


# ///////
# این میاد دو حرفی ها را حذف میکنه
\b[eoaiu][a-z][a-z]+\b


# /////
# توجه شود ه حتما نقطه را در خود
# یعنی ممکنه
[.]
# بگیره خود نقطه را ولی مشکل زا میشه پس بهتره \.
# ////////////////
()
# گروه بندی:

# برای اینه که در پایتون وقتی میخوایم دسترسی داشته باشیم بهش بگیم که جدا باشه
# یعنی یوزر نیم را جدا کنه و expression را جدا کنه

# //////////
+
# هی میاره جلو

# ///////

# اجازه ندادن در رجکس

(?!\.) - #don't allow . at start
# نمیزاره در اغاز بیاد

(?!.*\.\.) - #don't allow 2 consecutive dots
# نمیزاره دوبار پشت هم تکرار بشه

(?!.*\.$) - #don't allow . at end
# نمیزاره  مثلا نقطه در اخر باشه



# ////////
Ali(.+)Reza
# میاد اسم هایی که اشتباه نوشتیم را میچسبونه
AliReza
Ali-Reza
Ali Reza
Ali   Reza
Ali- -Reza
Ali2Reza
AlirReza
# /////////////////////
and or
# در رجکس
(a|b)
# دستکم a یا b


# ////////
# از گروه درآوردن
(?:)

# //////////

# ایمیل:
# این ایمیل ها را درست بررسی میکنه فقط دو تا @ هم میده
.*[a-zA-Z+-\._%].*@([a-zA-Z]+\.[a-zA-Z]+$)

# این اینو پوشش نمیده
^.*[a-zA-Z+-._%].*@+[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+\s
mamad_fdds@gffd.dfs
# اگر تنها باشه و اخرش اسپیس نداشته باشه

# راه حل اینه
^.*[a-zA-Z+-._%].*@+[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+\w

# ///////
# ایمیل بر ساس استاندارد rfc 5322
([-!#-'*+/-9=?A-Z^-~]+(\.[-!#-'*+/-9=?A-Z^-~]+)*|"([]!#-[^-~ \t]|(\\[\t -~]))+")@([-!#-'*+/-9=?A-Z^-~]+(\.[-!#-'*+/-9=?A-Z^-~]+)*|\[[\t -Z^-~]*])

# ///////////////////
# رجکس فارسی
# اگر یه عدد بود مثل این در کنار قیمت
# '6,965,000تومان'
.(.+\d)تومان
# ما فقط عددشو میخواستیم
# 6,965,000

# ////
# دو تا عدد را میده
\d+,\d+
# /////////
# رجکس فارسی

https://github.com/mirhmousavi/Regex.Persian.Language.git

# پرسش
# چطور اینرا داشته باشیم؟
# ('گوشی موبايل سامسونگ مدل گلکسی A32 4G دو سیم کارت - ظرفیت 128 گیگابایت - رم 6 گیگابایت', '10,495,000تومان', ['128', '6.4', '64', '5000'])
# فقط سامسونگ را بگیریم
# بعد تیکه ضرفیتشو بگیریم
# حتی دو را به 2 تبدیل کنیم
# حالا سه کاراکتر داشته باشیم
# که روی کاراکتر اولش جدا انجام بدیم








